<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gengeratorConfiguration
	 PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
	 "Http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">  
<gengeratorConfiguration>
	<!-- context用于制定生成一组对象的环境(例如指定要连接的数据库，要生成的对象的类型，要处理的数据库中的表)，
	defaultModelType值：
		conditional:默认值，如果一个表的主键只有一个字段，那么不会为该字段生成单独的实体类，而是将该字段合并到基本实体类中
		flat：每个表只生成一个类 
	targetRuntime值:
		MyBatis3:默认值，会生成Example相关方法
		MyBatis3Simple:不会生成Example方法-->
	<context id="MySqlContext" targetRuntime="MyBatis3Simple" defaultModelType="flat">
		<property name="autoDelimitKeyWords" value="true"/>
		<property name="beginningDelimiter" value="`"/>
		<property name="endingDelimiter" value="`"/>
		
		<!-- 配置如何生成注释，
		suppressDate值，阻止生成的注释包含时间戳,默认为false 
		addRemarkComments,注释是否添加数据库表的备注信息，默认为false-->
		<commentGenerator>
			<property name="suppressDate" value="true"/>
			<property name="addRemarkComments" value="true"/>
		</commentGenerator>
		
		<!-- 指定MBG要连接的数据库信息 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver" 
		connectionURL="jdbc:mysql://localhost:3306/tmalldb" 
		userId="root"
		password="admin">
		</jdbcConnection>
		
		<!-- 用来控制生成的实体类 -->
		<javaModelGenerator targetPackage="com.web.pojo" targetProject="src\main\java">
			<!-- trimStrings，是否对数据库查询结果进行trim操作，即this.username = username == null ? null : username.trim() -->
			<property name="trimStrings" value="true"/>
		</javaModelGenerator>
		
		<!-- 用来配置SQL映射生成器 -->
		<sqlMapGenerator targetPackage="com.web.mapper" targetProject="src\main\resources" />
		
		<!-- 用于配置Java客户端生成器（Mapper接口） -->
		<javaClientGenerator targetPackage="XMLMAPPER" type="com.web.dao" targetProject="src\main\java" />
		
		<table tableName="%">
			<!-- 用来指定自动生成主键的属性 -->
			<generatedKey column="id" sqlStatement="MySql"/>
		</table>
		
	</context>
</gengeratorConfiguration>